{
	"version": 0.1,
	"transformation-sets": {
		"src-transform": {
			"db": {
				"src.db": "db_jira_import",
				"dest.db": "db_scrum_transform"
			},
			"transformations": {
				"components": {
					"class": "transformation.transformer.Col2DocTransformation",
					"cfg": {
						"src.db.load": {
							"src": "components"
						},
						"transform": {
							"func": "transformation.transformer.singles2array",
							"params": {
								"field": "component"
							}							
						},
						"dest.db.cleanup": {
							"target": "project.components"
						},
						"dest.db.save": {
							"dest": "project.components"
						}
					}
				},
				"employees": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "employees"
						},
						"transform": {
							"func": "transformation.transformer.copy"						
						},
						"dest.db.cleanup": {
							"target": "project.employees"
						},
						"dest.db.save": {
							"dest": "project.employees"
						}
					}
				},
				"sprint-timeline": {
					"class": "transformation.transformer.Doc2DocTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint"
						},
						"transform": {
							"func": "ext.transformers.dates2range",
							"params": {
								"field.startDate": "startDate",
								"field.endDate": "endDate",
								"field.range": "timeline"								
							}							
						},
						"dest.db.cleanup": {
							"target": "sprint.timeline"
						},
						"dest.db.save": {
							"dest": "sprint.timeline"
						}
					}
				},
				"sprint-definition": {
					"class": "transformation.transformer.Doc2DocTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint"
						},
						"transform": {
							"func": "transformation.transformer.copy"
						},
						"dest.db.cleanup": {
							"target": "sprint.definition"
						},
						"dest.db.save": {
							"dest": "sprint.definition"
						}
					}
				},				
				"sprint-all_items": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "backlog"
						},
						"transform": {
							"func": "ext.transformers.sec2hrs",
							"params": {
								"fields": ["estimate"]  
							}
						},
						"dest.db.cleanup": {
							"target": "sprint.all_items"
						},
						"dest.db.save": {
							"dest": "sprint.all_items"
						}
					}
				}				
			}
		},
		"int-transform": {
			"db": {
				"src.db": "db_scrum_transform",
				"dest.db": "db_scrum_transform"
			},
			"transformations": {
				"all_items_filtered": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.all_items"
						},
						"transform": {
							"func": "transformation.transformer.filter_set",
							"params": {
								"where": "type == 'Story' or type == 'Bug' or type == 'Sub-task'"
							}
						},
						"dest.db.cleanup": {
							"target": "sprint.all_items_filtered"
						},
						"dest.db.save": {
							"dest": "sprint.all_items_filtered"
						}
					}
				},
				"all_items_sorted": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.all_items_filtered"
						},
						"transform": {
							"func": "transformation.transformer.sort_set",
							"params": {
								"sort.field": "priority",
								"sort.order": ["Highest", "High", "Medium", "Low", "Lowest"]							
							}
						},
						"dest.db.cleanup": {
							"target": "sprint.all_items_sorted"
						},
						"dest.db.save": {
							"dest": "sprint.all_items_sorted"
						}
					}
				},				
				"raw_assignments": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.all_items"
						},
						"transform": {
							"func": "transformation.transformer.array2singles",
							"params": {
								"field.array": "assignments",
								"field.single": "assignment"
							}
						},
						"dest.db.cleanup": {
							"target": "sprint.raw_assignments"
						},
						"dest.db.save": {
							"dest": "sprint.raw_assignments"
						}					
					}
				},
				"assignments": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.raw_assignments"
						},
						"transform": {
							"func": "transformation.transformer.regexp",
							"params": {
								"input.field": "assignment",
								"pattern": "^(\\S+-\\d+){1}_(\\S+-\\d+){0,1}_(\\d{4}-\\d{2}-\\d{2})_(\\S+)_(\\S+)_(\\d+(\\.\\d{1,2})*)_(\\S*)$",
								"output": [
									{
										"field": "key",
										"idx": 0,
										"type": "string"
									},								
									{
										"field": "parent",
										"idx": 1,
										"type": "string"
									},
									{
										"field": "date",
										"idx": 2,
										"type": "date"
									},
									{
										"field": "group",
										"idx": 3,
										"type": "string"
									},
									{
										"field": "employee",
										"idx": 4,
										"type": "string"
									},
									{
										"field": "whrs",
										"idx": 5,
										"type": "float"
									},
									{
										"field": "comment",
										"idx": 7,
										"type": "string"
									}									
								]
							}
						},
						"dest.db.cleanup": {
							"target": "sprint.assignments"
						},
						"dest.db.save": {
							"dest": "sprint.assignments"
						}
					}
				},				
				"idx_blocked_by": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.all_items"
						},
						"transform": {
							"func": "transformation.transformer.array2singles",
							"params": {
								"field.key": "key",
								"field.array": "blocked_by",
								"field.single": "blocked_by"
							}
						},
						"dest.db.cleanup": {
							"target": "sprint.idx_blocked_by"
						},
						"dest.db.save": {
							"dest": "sprint.idx_blocked_by"
						}					
					}
				},
				"idx_blocks": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.all_items"
						},
						"transform": {
							"func": "transformation.transformer.array2singles",
							"params": {
								"field.key": "key",
								"field.array": "blocks",
								"field.single": "blocks"
							}
						},
						"dest.db.cleanup": {
							"target": "sprint.idx_blocks"
						},
						"dest.db.save": {
							"dest": "sprint.idx_blocks"
						}					
					}
				},
				"idx_subtasks": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.all_items"
						},
						"transform": {
							"func": "transformation.transformer.array2singles",
							"params": {
								"field.key": "key",
								"field.array": "subtasks",
								"field.single": "subtask"
							}
						},
						"dest.db.cleanup": {
							"target": "sprint.idx_subtasks"
						},
						"dest.db.save": {
							"dest": "sprint.idx_subtasks"
						}					
					}
				}				
			}
		},
		"dest-transform": {
			"db": {
				"src.db": "db_scrum_transform",
				"dest.db": "db_scrum_api"
			},
			"transformations": {
				"backlog": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.all_items_sorted"
						},
						"transform": {
							"func": "transformation.transformer.copy",
							"params": {
								"fields": ["key", "parent", "type", "priority", "status", "assignee_id", "duedate", "estimate", "components", "blocked_by", "blocks"]
							}
						},
						"dest.db.cleanup": {
							"target": "sprint.backlog"
						},
						"dest.db.save": {
							"dest": "sprint.backlog"
						}
					}
				},
				"assignements": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.assignments"
						},
						"transform": {
							"func": "transformation.transformer.copy"
						},
						"dest.db.cleanup": {
							"target": "sprint.assignments"
						},
						"dest.db.save": {
							"dest": "sprint.assignments"
						}
					}
				},
				"employees": {
					"class": "transformation.transformer.Col2ColTransformation",
					"cfg": {
						"src.db.load": {
							"src": "project.employees"
						},
						"transform": {
							"func": "transformation.transformer.copy"
						},
						"dest.db.cleanup": {
							"target": "project.employees"
						},
						"dest.db.save": {
							"dest": "project.employees"
						}
					}
				},
				"components": {
					"class": "transformation.transformer.Doc2DocTransformation",
					"cfg": {
						"src.db.load": {
							"src": "project.components"
						},
						"transform": {
							"func": "transformation.transformer.copy"
						},
						"dest.db.cleanup": {
							"target": "project.components"
						},
						"dest.db.save": {
							"dest": "project.components"
						}
					}
				},
				"sprint.definition": {
					"class": "transformation.transformer.Doc2DocTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.definition"
						},
						"transform": {
							"func": "transformation.transformer.copy"
						},
						"dest.db.cleanup": {
							"target": "sprint.definition"
						},
						"dest.db.save": {
							"dest": "sprint.definition"
						}
					}
				},
				"sprint.timeline": {
					"class": "transformation.transformer.Doc2DocTransformation",
					"cfg": {
						"src.db.load": {
							"src": "sprint.timeline"
						},
						"transform": {
							"func": "transformation.transformer.copy"
						},
						"dest.db.cleanup": {
							"target": "sprint.timeline"
						},
						"dest.db.save": {
							"dest": "sprint.timeline"
						}
					}
				}				
			}
		}
	}
}
